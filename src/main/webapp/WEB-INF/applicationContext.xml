<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd 
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                		http://www.springframework.org/schema/tx 
                		http://www.springframework.org/schema/tx/spring-tx.xsd">

	
	<context:property-placeholder location="/WEB-INF/application.properties"/>
 	<!-- 扫描包 -->
	<context:component-scan base-package="main.java.service" /> 
	
	<!--<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">-->
		<!--<property name="basename" value="configuration" />-->
		<!--<property name="useCodeAsDefaultMessage" value="true" />-->
	<!--</bean>-->

    <!-- 数据源配置 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean> 
	<!-- 解决使用@ResponseBody 的中文乱码。 -->
	<bean class="main.java.filter.UTF8StringBeanPostProcessor"></bean>
	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
  		<property name="filters" value="config" />
		<property name="connectionProperties" value="config.decrypt=true" />
	</bean>
	
    <!-- Mybatis配置 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- basePackage指定要扫描的包，在此包之下的映射器都会被搜索到。可指定多个包，包与包之间用逗号或分号分隔。 -->
		<property name="basePackage" value="main.java.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	
	<!--mapper动态代理-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
<!-- 		<property name="configLocation" value="classpath:mybatis.xml" /> -->
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:main/java/dao/xmlMapper/*.xml"/>
	</bean>
	
	<!-- 校验 -->
	<bean id="validate" class="main.java.util.SpringConfigTool" lazy-init="false">
		<property name="pwdComplexity" value="${pwdComplexity}"></property>
		<property name="canLogin" value="${canLogin}"></property>
	</bean>	
	
<!-- 	<bean class="main.java.test.PostProcessor" init-method="init"></bean> -->
</beans>